<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.repository.dao.PayMapper">
  <resultMap id="BaseResultMap" type="com.code.repository.entity.Pay">
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="pay_is_enable" jdbcType="INTEGER" property="payIsEnable" />
    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
    <result column="is_default" jdbcType="INTEGER" property="isDefault" />
    <association property="payUser" javaType="com.code.repository.entity.Customer">
      <id column="ID" property="ID"></id>
      <result column="username" property="username"></result>
    </association>
  </resultMap>
  <select id="findByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from t_pay where ID = #{ID,jdbcType = VARCHAR}
  </select>
  <select id="findList" resultMap="BaseResultMap" parameterType="java.util.Map">
    select * from t_pay where
    <choose>
      <when test="map.keys.size>0">
        <foreach collection="map.keys" item="key" separator="AND">
          ${key} = #{map[${key}]}
        </foreach>
      </when>
      <otherwise>
        1=1
      </otherwise>
    </choose>
  </select>
  <insert id="insert" parameterType="com.code.repository.entity.Customer">
    insert into t_pay (ID, pay_type, pay_account,
      pay_user, pay_is_enable,pay_order)
    values (#{id,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, #{payAccount,jdbcType=VARCHAR},
      #{payUser.ID,jdbcType=VARCHAR}, #{payIsEnable,jdbcType=INTEGER}, #{payOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.code.repository.entity.Customer">
    insert into t_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payAccount != null">
        pay_account,
      </if>
      <if test="payUser != null">
        pay_user,
      </if>
      <if test="payIsEnable != null">
        pay_is_enable,
      </if>
      <if test="payOrder != null">
        pay_order,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR}
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=VARCHAR}
      </if>
      <if test="payUser != null">
        #{payUser.ID,jdbcType=VARCHAR}
      </if>
      <if test="payIsEnable != null">
        #{payIsEnable,jdbcType=INTEGER}
      </if>
      <if test="payOrder != null">
        #{payOrder,jdbcType=INTEGER}
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.code.repository.entity.Pay">
    update t_pay set
    <trim suffixOverrides=",">
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR}
      </if>
      <if test="payAccount != null">
        pay_account =  #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payUser != null">
        pay_user = #{payUser.ID,jdbcType=VARCHAR},
      </if>
      <if test="payIsEnable != null">
        pay_is_enable = #{payIsEnable,jdbcType=INTEGER},
      </if>
      <if test="payOrder != null">
        pay_order = #{payOrder,jdbcType=INTEGER}
      </if>
    </trim>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>