<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.repository.dao.GoodsOrderMapper">
  <resultMap id="BaseResultMap" type="com.code.repository.entity.GoodsOrder">
    <result column="ID" jdbcType="VARCHAR" property="id" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="goods_buy_time" jdbcType="DATE" property="goodsBuyTime" />
    <result column="goods_cancel" jdbcType="DATE" property="goodsCancel" />
    <result column="goods_relate_number" jdbcType="VARCHAR" property="goodsRelateNumber"></result>
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason"></result>
    <association property="goodsBuyUser" javaType="com.code.repository.entity.Customer">
      <result column="goods_buy_user" property="id"></result>
      <result column="username" property="username"></result>
    </association>
  </resultMap>
  <select id="findOrdersByUser" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from t_goods_order s inner join t_customer c  on s.goods_buy_user = c.id where s.goods_buy_user = #{id,jdbcType=VARCHAR}
  </select>

  <select id="findByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from t_goods_order s inner join t_customer c  on s.goods_buy_user = c.id where s.id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="delete" parameterType="java.lang.String">
    delete from t_goods_order where ID = #{ID,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.code.repository.entity.GoodsOrder">
    insert into t_goods_order (ID, order_status,
      goods_buy_time, goods_cancel, goods_buy_user,goods_relate_number,cancel_reason
      )
    values (#{id,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR},
      #{goodsBuyTime,jdbcType=DATE}, #{goodsCancel,jdbcType=DATE}, #{goodsBuyUser.id,jdbcType=VARCHAR},#{goodsRelateNumber,jdbcType=VARCHAR}
      ,#{cancelReason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.code.repository.entity.GoodsOrder">
    insert into t_goods_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="goodsBuyTime != null">
        goods_buy_time,
      </if>
      <if test="goodsCancel != null">
        goods_cancel,
      </if>
      <if test="goodsBuyUser != null">
        goods_buy_user,
      </if>
      <if test="goodsRelateNumber != null">
        goods_relate_number,
      </if>
      <if test="cancelReason != null">
        cancel_reason
      </if>
    </trim>
    <trim prefix="values(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsBuyTime != null">
        #{goodsBuyTime,jdbcType=DATE},
      </if>
      <if test="goodsCancel != null">
        #{goodsCancel,jdbcType=DATE},
      </if>
      <if test="goodsBuyUser != null">
        #{goodsBuyUser.id,jdbcType=VARCHAR},
      </if>
      <if test="goodsRelateNumber != null">
        #{goodsRelateNumber,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null">
        #{cancelReason,jdbcType=VARCHAR}
      </if>

    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.code.repository.entity.GoodsOrder">
    update t_goods_order set
    <trim suffixOverrides=",">
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="goodsBuyTime != null">
        goods_buy_time =   #{goodsBuyTime,jdbcType=DATE},
      </if>
      <if test="goodsCancel != null">
        goods_cancel =    #{goodsCancel,jdbcType=DATE},
      </if>
      <if test="goodsBuyUser != null">
        goods_buy_user =  #{goodsBuyUser.id,jdbcType=VARCHAR},
      </if>
      <if test="goodsRelateNumber != null">
        goods_relate_number =  #{goodsRelateNumber,jdbcType=VARCHAR},
      </if>
      <if test="cancelReason != null">
        cancel_reason =  #{cancelReason,jdbcType=VARCHAR}
      </if>
    </trim>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>